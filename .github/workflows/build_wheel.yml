name: Build wheel

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - id: get_version
        uses: rsxdalv/extract-python-version@v2
        with:
          file-path: setup.py
          fallback-version: 0.0.0

      - id: version_check
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG="v${VERSION}"
          
          if [ -z "$VERSION" ] || [ "$VERSION" = "0.0.0" ]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          if git tag -l | grep -q "^${TAG}$"; then
            echo "Tag $TAG already exists, skipping release"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected: $VERSION"
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi

      - if: steps.version_check.outputs.should_release == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install build

      - if: steps.version_check.outputs.should_release == 'true'
        run: python -m build --wheel --outdir dist/

      - if: steps.version_check.outputs.should_release == 'true'
        run: du -h dist/*

      - if: steps.version_check.outputs.should_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl

      - if: steps.version_check.outputs.should_release == 'true'
        run: echo "wheel_name=$(basename dist/*.whl)" >> $GITHUB_ENV

      - if: steps.version_check.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version_check.outputs.tag }}
          name: Release ${{ steps.version_check.outputs.version }}
          body: |
            Automated release for version ${{ steps.version_check.outputs.version }}
            
            ## Changes
            - Built wheel: ${{ env.wheel_name }}
            
            ## Installation
            ```bash
            pip install ${{ env.wheel_name }}
            ```
          files: dist/*.whl